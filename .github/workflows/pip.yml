name: Pip

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - latest
      - dev

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [windows-latest, ubuntu-latest]
        python-version: ["2.7", "3.5", "3.8", "3.9"]

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
        lfs: true
        submodules: recursive

    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies on Ubuntu
      if: runner.os == 'Linux'
      run: |
        echo
        echo "###################################################################"
        echo "########################## Setup Clang11 ##########################"
        echo "###################################################################"
        sudo apt-get update
        sudo apt-get install -y binutils libstdc++6 cmake
        sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-11 90
        sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-11 90
        sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 90
        echo
        echo "###################################################################"
        echo "######################## ASGE Dependencies ########################"
        echo "###################################################################"
        sudo apt-get install -y --no-install-recommends --no-install-suggests \
        libtbb-dev libharfbuzz-bin libharfbuzz-dev libxrandr-dev libxxf86vm-dev \
        libxi-dev libxinerama-dev libxcursor-dev libgl1-mesa-dev libglu1-mesa-dev \
        libpng-dev libbz2-dev mesa-common-dev libglfw3-dev

    - name: Add requirements
      run: python -m pip install --upgrade wheel setuptools

    # Eventually Microsoft might have an action for setting up
    # MSVC, but for now, this action works:
    - name: Prepare compiler environment for Windows 🐍 2.7
      if: matrix.python-version == 2.7 && runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    # This makes two environment variables available in the following step(s)
    - name: Set Windows 🐍 2.7 environment variables
      if: matrix.python-version == 2.7 && runner.os == 'Windows'
      shell: bash
      run: |
        echo "DISTUTILS_USE_SDK=1" >> $GITHUB_ENV
        echo "MSSdk=1" >> $GITHUB_ENV

    - name: Install ccache
      if: runner.os != 'Windows'
      uses: hendrikmuhs/ccache-action@v1
      with:
        key: ${{ matrix.os }}-${{ matrix.python-version }}

    - name: Update path for ccache
      if: runner.os != 'Windows'
      run: |
        echo "/usr/lib/ccache" >> $GITHUB_PATH
        echo "/usr/local/opt/ccache/libexec" >> $GITHUB_PATH

    - name: Build and install
      run:  pip install --verbose .

    - name: Test
      run: python tests/test.py
